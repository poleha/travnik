# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-27 15:06
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Время изменения')),
                ('published', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Время публикации')),
                ('username', models.CharField(max_length=256, verbose_name='Имя')),
                ('email', models.EmailField(max_length=254, verbose_name='E-Mail')),
                ('body', models.TextField(verbose_name='Сообщение')),
                ('ip', models.CharField(db_index=True, max_length=300)),
                ('session_key', models.TextField(blank=True, db_index=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'На согласовании'), (2, 'Опубликован')], db_index=True, verbose_name='Статус')),
                ('key', models.CharField(blank=True, max_length=128)),
                ('confirmed', models.BooleanField(db_index=True, default=False)),
                ('delete_mark', models.BooleanField(db_index=True, default=False, verbose_name='Пометка удаления')),
                ('post_mark', models.IntegerField(blank=True, choices=[(1, '1'), (1, '2'), (3, '3'), (4, '4'), (5, '5')], null=True, verbose_name='Оценка')),
                ('consult_required', models.BooleanField(db_index=True, default=False, verbose_name='Нужна консультация провизора')),
                ('old_id', models.PositiveIntegerField(blank=True, null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='main.Comment')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Время изменения')),
                ('history_type', models.IntegerField(choices=[(1, 'Комментарий создан'), (2, 'Комментарий сохранен'), (3, 'Комментарий оценен'), (4, 'Материал создан'), (5, 'Материал сохранен'), (6, 'Материал оценен'), (7, 'Жалоба на комментарий')], db_index=True)),
                ('user_points', models.PositiveIntegerField(blank=True, default=0)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=300, null=True)),
                ('session_key', models.TextField(blank=True, db_index=True, null=True)),
                ('mark', models.IntegerField(blank=True, choices=[(1, '1'), (1, '2'), (3, '3'), (4, '4'), (5, '5')], null=True, verbose_name='Оценка')),
                ('old_id', models.PositiveIntegerField(blank=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False, verbose_name='Удалена')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history_author', to=settings.AUTH_USER_MODEL)),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history_comment', to='main.Comment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Время изменения')),
                ('mail_type', models.PositiveIntegerField(choices=[(1, 'Подтверждение отзыва'), (2, 'Регистрация пользователя'), (3, 'Сброс пароля'), (4, 'Ответ на отзыв'), (5, 'Подтверждение электронного адреса')], db_index=True)),
                ('subject', models.TextField()),
                ('body_html', models.TextField(blank=True, default='')),
                ('body_text', models.TextField(blank=True, default='')),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('ip', models.CharField(blank=True, db_index=True, max_length=300, null=True)),
                ('session_key', models.TextField(blank=True, db_index=True, null=True)),
                ('email_from', models.EmailField(db_index=True, max_length=254)),
                ('entity_id', models.CharField(blank=True, db_index=True, max_length=20)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Время изменения')),
                ('title', models.CharField(db_index=True, max_length=500, verbose_name='Название')),
                ('published', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Время публикации')),
                ('alias', models.CharField(blank=True, db_index=True, max_length=800, verbose_name='Синоним')),
                ('status', models.IntegerField(choices=[(1, 'Проект'), (2, 'Опубликован')], db_index=True, default=1, verbose_name='Статус')),
                ('post_type', models.IntegerField(choices=[(1, 'Растение'), (2, 'Рецепт'), (3, 'Область применения')], db_index=True, verbose_name='Вид записи')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, db_index=True, verbose_name='Время создания')),
                ('updated', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Время изменения')),
                ('role', models.PositiveIntegerField(blank=True, choices=[(1, 'Обычный пользователь'), (2, 'Автор'), (3, 'Врач'), (33, 'Админ')], db_index=True, default=1)),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_profile', verbose_name='Изображение')),
                ('receive_messages', models.BooleanField(db_index=True, default=True, verbose_name='Получать e-mail сообщения с сайта')),
                ('old_id', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.Post')),
                ('body', ckeditor.fields.RichTextField(blank=True, verbose_name='Описание')),
                ('image', sorl.thumbnail.fields.ImageField(blank=True, max_length=300, null=True, upload_to='plant', verbose_name='Изображение')),
                ('short_body', models.TextField(blank=True, verbose_name='Анонс')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.post',),
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.Post')),
                ('body', ckeditor.fields.RichTextField(blank=True, verbose_name='Описание')),
                ('image', sorl.thumbnail.fields.ImageField(blank=True, max_length=300, null=True, upload_to='plant', verbose_name='Изображение')),
                ('short_body', models.TextField(blank=True, verbose_name='Анонс')),
                ('plants', models.ManyToManyField(blank=True, related_name='recipes', to='main.Plant', verbose_name='Растения')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.post',),
        ),
        migrations.CreateModel(
            name='UsageArea',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.Post')),
            ],
            options={
                'abstract': False,
            },
            bases=('main.post',),
        ),
        migrations.AddField(
            model_name='history',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history_post', to='main.Post'),
        ),
        migrations.AddField(
            model_name='history',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main.Post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='updater',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recipe',
            name='usage_areas',
            field=models.ManyToManyField(blank=True, related_name='recipes', to='main.UsageArea', verbose_name='Области применения'),
        ),
        migrations.AddField(
            model_name='plant',
            name='usage_areas',
            field=models.ManyToManyField(blank=True, related_name='plants', to='main.UsageArea', verbose_name='Области применения'),
        ),
    ]
